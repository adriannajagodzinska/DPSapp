<style>
    .button {
        display: inline-block;
        border-radius: 4px;
        background-color: white;
        border: double;
        color: black;
        text-align: center;
        font-size: 14px;
        font-family: Marker Felt;
        padding: 20px;
        width: 320px;
        transition: all 0.5s;
        cursor: pointer;
        margin: 0px;
    }

        .button:hover {
            background-color: #EDEDED;
        }

        .button span {
            cursor: pointer;
            display: inline-block;
            position: relative;
            transition: 0.5s;
        }

            .button span:after {
                content: '\00bb';
                position: absolute;
                opacity: 0;
                top: 0;
                right: -20px;
                transition: 0.5s;
            }

        .button:hover span {
            padding-right: 25px;
        }

            .button:hover span:after {
                opacity: 1;
                right: 0;
            }

    .my-class {
        color: black;
        font-family: Marker Felt;
    }

        .my-class:active {
            color: black;
        }

        .my-class:link {
            color: black;
        }

        .my-class:visited {
            color: black;
        }

        .my-class:hover {
            color: cadetblue;
        }

    .gradient-class {
        color: black;
        position: center;
        font-family: Marker Felt;
        font-size: larger;
    }
</style>
@model List<DPSapp.Models.User>
@{
    ViewBag.Title = "Zarządzanie użytkownikami";
    Layout = "~/Views/Shared/_LayoutEmp.cshtml";
}
<div class="jumbotron jumbotron-fluid" style="background-color:whitesmoke">
    <div class="container" style=" background-color:whitesmoke">

        <h1 class="display-4" style="        text-align: center;
        font-family: Marker Felt; border:double; background-color:white">
            Lista Użytkowników
        </h1>


    </div>
</div>

<div>
    <p id="dodaj" class="button">
        @Html.ActionLink("Dodaj nowego użytkownika", "CreateUser", null, new { title = "Naciśnięcie spowoduje przeniesienie do modułu dodawania użytkownika" })

    </p>
</div>


<br />
<div class="card text-white bg-info text-center" style="background-color:whitesmoke">
    <h4 class="display-4" style="        text-align: left;
        font-family: Marker Felt">
        Wyszukaj użytkownika
    </h4>
    <div class="form-group">
        <div class="input-group">
            <span class="input-group-addon"><i class="glyphicon glyphicon-search"></i> </span>
            <input type="text" id="Search" placeholder="Search" class="form-control" title="Dynamiczne wyszukiwanie użytkownika" />
        </div>
    </div>
</div>
<br />
<div>



    <table class="table table-hover" id="tabelka" style="        font-family: Marker Felt;
        background-color: white;
        color: black">
        <tr>
            <th>
                @*@Html.DisplayNameFor(model => model.RecipeName)*@
                @Html.ActionLink("Numer", "UserManagement", new { sortOrder = ViewBag.IdSortParm }, new { @class = "my-class", title = "Naciśnięcie spowoduje posortwanie danych według tabeli" })
            </th>
            <th>
                @*@Html.DisplayNameFor(model => model.RecipeName)*@
                @Html.ActionLink("Login", "UserManagement", new { sortOrder = ViewBag.LoginSortParm }, new { @class = "my-class", title = "Naciśnięcie spowoduje posortwanie danych według tabeli" })
            </th>
            <th>
                @* @Html.DisplayNameFor(model => model.Date)*@
                @Html.ActionLink("Hasło", "UserManagement", new { sortOrder = ViewBag.PasswordSortParm }, new { @class = "my-class", title = "Naciśnięcie spowoduje posortwanie danych według tabeli" })
            </th>
            <th>
                @* @Html.DisplayNameFor(model => model.Date)*@
                @Html.ActionLink("Liczba przypisanych pensjonariuszy", "UserManagement", new { sortOrder = ViewBag.PatientIdSortParm }, new { @class = "my-class", title = "Naciśnięcie spowoduje posortwanie danych według tabeli" })
            </th>
            <th></th>
        </tr>
        @*<tr>
                <th>Login</th>
                <th>Hasło</th>
                <th>PacjentID</th>
            </tr>*@


        @foreach (var user in Model)
        {
            <tr class="Search">
                <td>
                    @user.UserId
                </td>
                <td>


                    @user.Login

                    @*<a href=@Url.Action("Slider","Rooms") class="btn btn-primary">@room.RoomNumber</a>*@
                </td>
                <td>
                    @user.Password
                </td>
                <td style="position:center">
                    @if (user.PatientID == 0)
                    {
                        <h5> Brak (Konto Pracownika)</h5>
                    }
                    else
                    {
                        <h5>1</h5>

                    }
                </td>
                <td>
                    @*<a href=@Url.Action(String.Format("EditUser/{0}",@user.UserId),"Employee") class="button">Edytuj użytkownika</a>*@
                    @Html.ActionLink("Szczegóły", "DetailsUser", new { id = user.UserId }, new { @class = "my-class", title = "Naciśnięcie umożliwia podgląf szczegółów użytkownika" })
                    @Html.ActionLink("Edytuj", "EditUser", new { id = user.UserId }, new { @class = "my-class", title = "Naciśnięcie umożliwia edycję wybranego użytkownika" })
                    @Html.ActionLink("Usuń", "DeleteUser", new { id = user.UserId }, new { @class = "my-class", title = "Naciśnięcie umożliwia usunięcie wybranego użytkownika" })
                </td>
            </tr>
        }

        @*<a href=@Url.Action("Index","Employee") class="button">Wróć</a>*@

    </table>



</div>

@*<div>
        @Html.ActionLink("Back to List", "Index")
    </div>*@
<script src="~/Scripts/jquery-3.3.1.slim.js"></script>
<script>
    $(document).ready(function () {
        function Contains(text_one, text_two) {
            if (text_one.indexOf(text_two) != -1)
                return true;
        }
        $("#Search").keyup(function () {
            var searchText = $("#Search").val().toLocaleLowerCase();
            $(".Search").each(function () {
                if (!Contains($(this).text().toLowerCase(), searchText)) {
                    $(this).hide();
                }
                else {
                    $(this).show();
                }
            });
        });
    });
</script>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
