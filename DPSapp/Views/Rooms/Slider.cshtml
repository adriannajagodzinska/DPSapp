

@{
    ViewBag.Title = "Slider";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<style>
    * {
        box-sizing: border-box;
    }

    body {
        font-family: Verdana, sans-serif;
    }

    .mySlides {
        display: none;
    }

    img {
        vertical-align: middle;
    }

    /* Slideshow container */
    .slideshow-container {
        max-width: 1000px;
        position: relative;
        margin: auto;
    }

    /* Caption text */
    .text {
        color: #f2f2f2;
        font-size: 15px;
        padding: 8px 12px;
        position: absolute;
        bottom: 8px;
        width: 100%;
        text-align: center;
    }

    /* Number text (1/3 etc) */
    .numbertext {
        color: #f2f2f2;
        font-size: 12px;
        padding: 8px 12px;
        position: absolute;
        top: 0;
    }

    /* The dots/bullets/indicators */
    .dot {
        height: 15px;
        width: 15px;
        margin: 0 2px;
        background-color: #bbb;
        border-radius: 50%;
        display: inline-block;
        transition: background-color 0.6s ease;
    }

    .active {
        background-color: #717171;
    }
    /* Fading animation */
    .fade {
        -webkit-animation-name: fade;
        -webkit-animation-duration: 3.5s;
        animation-name: fade;
        animation-duration: 3.5s;
    }

    @@-webkit-keyframes fade {
        from {
            opacity: .4
        }

        to {
            opacity: 1
        }
    }

    @@keyframes fade {
        from {
            opacity: .4
        }

        to {
            opacity: 1
        }
    }

    /* On smaller screens, decrease text size */
    @@media only screen and (max-width: 300px) {
        .text {
            font-size: 11px
        }
    }
</style>



@*@model List<string> ListOfAdressessToMedia*@
@model DPSapp.Models.ListOfAdressessToMedia
<script src="https://code.jquery.com/jquery-3.3.1.min.js"
        integrity="sha256-FgpCb/KJQlLNfOu91ta32o/NMZxltwRo8QtmkMRdAu8="
        crossorigin="anonymous"></script>


<div class="slideshow-container">

    @for (int i = 0; i < Model.ListOfAdresses.Count; i++)
    {
        if (isImage(Model.ListOfAdresses[i]))
        {
            //<td>@adres</td>
    <div class="mySlides fade">
        <div class="numbertext">1</div>
        <img src="@Url.Content(Model.ListOfAdresses[i])" style="width:100%">
        <div class="text" style="font-size:30px; color:black">@Model.Komunikaty[i]</div>
    </div>
           
        }
        else if (isVideo(Model.ListOfAdresses[i]))
        {
            <div class="mySlides fade">
                <div class="numbertext">1</div>
                <video autoplay muted style="width:100%" controls>
                    <source src="@Url.Content(Model.ListOfAdresses[i])" type="video/mp4">
                </video>
                <div class="text" style="font-size:30px; color:black">@Model.Komunikaty[i]</div>
            </div>
            
        }
    }



    @*@foreach (var adres in Model.ListOfAdresses)
        {

            if (isImage(adres))
            {
                //<td>@adres</td>
                <div class="mySlides fade">
                    <div class="numbertext">1</div>
                    <img src="@Url.Content(adres)" style="width:100%">
                    <div class="text">Caption Text</div>
                </div>
            }
            else if (isVideo(adres))
            {
                <div class="mySlides fade">
                    <div class="numbertext">1</div>
                    <video autoplay muted style="width:100%" controls>
                        <source src="@Url.Content(adres)" type="video/mp4">
                    </video>
                    <div class="text">Caption</div>
                </div>

            }*@








</div>
<br>
@functions {

    public string getExtension(string filename)
    {
        var parts = filename.Split('.');
        return parts[parts.Length - 1];
    }

    public bool isVideo(string filename)
    {
        var ext = getExtension(filename);
        switch (ext.ToLower())
        {
            case "m4v": return true;
            case "avi": return true;
            case "mpg": return true;
            case "mp4": return true;

        }
        return false;
    }

    public bool isImage(string filename)
    {
        var ext = getExtension(filename);
        switch (ext.ToLower())
        {
            case "jpg": return true;
            case "gif": return true;
            case "bmp": return true;
            case "png": return true;


        }
        return false;
    }


}

<div style="text-align:center">
    @for (int i = 1; i <= Model.ListOfAdresses.Count; i++)
    {
        <span class="dot"></span>
    }
</div>

<script>
    var slideIndex = 0;

    showSlides();


    function getExtension(filename) {
        var parts = filename.split('.');
        return parts[parts.length - 1];
    }

    function isVideo(filename) {
        var ext = getExtension(filename);
        switch (ext.toLowerCase()) {
            case 'm4v':
            case 'avi':
            case 'mpg':
            case 'mp4':
                // etc
                return true;
        }
        return false;
    }

    function isImage(filename) {
        var ext = getExtension(filename);
        switch (ext.toLowerCase()) {
            case 'jpg':
            case 'gif':
            case 'bmp':
            case 'png':
                //etc
                return true;
        }
        return false;
    }


    function showSlides() {

        var i;
        var slides = document.getElementsByClassName("mySlides");
        var dots = document.getElementsByClassName("dot");
        for (i = 0; i < slides.length; i++) {
            slides[i].currentTime = 0;
            slides[i].style.display = "none";
        }
        slideIndex++;
        if (slideIndex > slides.length) { slideIndex = 1 }
        for (i = 0; i < dots.length; i++) {
            dots[i].className = dots[i].className.replace(" active", "");
        }
        slides[slideIndex - 1].style.display = "block";
        dots[slideIndex - 1].className += " active";
        setTimeout(showSlides, 5000); // Change image every 5 seconds
    }
</script>

</body>
</html> 